<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKittyBig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 0;
i = 0;
j = 0;
f = false;
flyUp = true;
maxHP = 200;
nowHP = maxHP;
barHP = instance_create(0, 0, KittyBar);
barHP.image_xscale = view_wview[0];
barHP.image_yscale = 8;
deathFlag = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(phase)
{
 case 0:
      i++;
      if(i&lt;200)
      {
       vspeed = -1;
      }
      else if (i &lt; 700)
      {
       vspeed = 0;
       if(j &lt; 10 &amp;&amp; !f)
       {
        image_angle += 0.4;
        j++;
       }
       else
       {
        f = true;
        image_angle -= 0.4;
        j--;
        if(j == -10)
             f = false;
       }
      }
      else 
      {
       phase = 1;
       i = 0;
       j = 0;
       f = false;
       image_angle = 0;
      }
      if(i=500)
       audio_play_sound(sndIHateKitty,0,0);
      break;
 case 1:
      if(i == 0)
      {
       audio_stop_all();
       ex_audio_stop_all();
       ex_audio_play("KittyTheme",true);
       background_visible[1] = true;
      }
      i++;
      if(i&lt;4)
      {
       image_xscale +=1;
       image_yscale +=1;
      }
      if(i == 7)
      {
       sprite_index = sprKittyAngry;
       image_xscale = 0.5;
       image_yscale = 0.5;
       image_speed = 0.2;
       phase = 2;
       i = 0;
      }
      break;
 case 2:
      i++;
      j++;
      if(flyUp)
      {
       if(y &gt; 200)
       {
        if(vspeed &gt; -4)
         vspeed -=0.1;
       }
       else flyUp = false;
      }
      else if(y &lt; 350)
      {
       if(vspeed &lt; 4)
        vspeed +=0.1;
      }
      else flyUp = true;
      
      if(j == 80)
      {
       if(instance_exists(Player))
       {
        heart = instance_create(x,y,KittyHeart);
        heart.image_speed = 0.5;
        if(Player.vspeed &gt; 0)
         heart.direction = point_direction(x+hspeed*4,y,Player.x,Player.y+30);
        else
         heart.direction = point_direction(x+hspeed*4,y,Player.x,Player.y-30);
        heart.speed = 20;
        j = 0;
       }
      }
      if(i == 600)
      {
        i = 0;
        j = 0;
        f = false;
        vspeed = 0;
        phase = 3;
        
      }
      break;
 case 3:
      i++;
      if(instance_exists(Player))
      {
       if(y &gt; Player.y)
        y-=5;
        
       if(y &lt; Player.y)
            y+=5;
      }
      if(i == 50)
      {
       instance_create(x,y,KittyLazer);
      }
      if(i == 150)
      {
       instance_create(x,y,KittyLazer);
      }
      if(i == 250 || i == 300 || i == 350)
      {
       instance_create(x,y,KittyLazer);
      }
      if(i == 400)
      {
       i = 0;
       j = 0;
       flyUp = true;
       phase = 4;
      }      
      break;
 case 4:
      i++;
      if(i mod 20 == 0)
      {
       instance_create(random_range(0,300),0,KittySmall);
      }
      if(i == 250)
      {
       i = 0;
       j = 0;
       flyUp = true;
       phase = 5;
      }
      if(flyUp)
      {
       if(y &gt; 200)
       {
        if(vspeed &gt; -4)
         vspeed -=0.1;
       }
       else flyUp = false;
      }
      else if(y &lt; 350)
      {
       if(vspeed &lt; 4)
        vspeed +=0.1;
      }
      else flyUp = true;
      break;
 case 5:
      if(flyUp)
      {
       if(y &gt; 200)
       {
        if(vspeed &gt; -4)
         vspeed -=0.1;
       }
       else flyUp = false;
      }
      else if(y &lt; 350)
      {
       if(vspeed &lt; 4)
        vspeed +=0.1;
      }
      else flyUp = true;
      
      j++;
      i+= random(10);
      if(i &gt; 90)
           i = 0;
      
      if(j mod 5 == 0 &amp;&amp; j &lt; 300)
      {
       heart = instance_create(512,256,KittyHeart);
       heart.direction = 135 + i;
       heart.speed = 1;
      }
      if(j == 650)
      {
       phase = 2;
       i = 0;
       j = 0;
       flyUp = true;
      }
      break;
 case 6:
      if(i == 0)
        instance_create(x,y,ShakeScreen);
      i++;
      
      if(i &lt; 200 &amp;&amp; i mod 4 == 0)
      {
       instance_create(x + random_range(-sprite_width/2,sprite_width/2),y + random_range(-sprite_height/2,sprite_height/2),KittyExplosion);
      }
      if(i == 150)
      {
       visible = false;
      }
      if(i = 250)
      {
       with(ShakeScreen)
       {
        instance_destroy();
       }
       phase = 7;
      }
      y++;
      x-=0.5;
      break;
 case 7:
      view_object[0] = Player;
      with(PrehistorikSmallPlatform)
      {
       if(KittyActivation == 01)
       {
        background_visible[1] = false;
        IsActive = true;
       }
      }
      ex_audio_play("KittyWin",false);
      instance_destroy();
      break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase &gt; 1)
{
 audio_play_sound(sndBossHit,0,0);
 with(other)
 {
  instance_destroy();
 }
nowHP -= 1;
if (nowHP &lt;= 0 &amp;&amp; !deathFlag) 
{   
    barHP.image_xscale = 0;
    audio_stop_all();    
    audio_play_sound(sndKittyFinalExplosion,0,0);
    deathFlag = true;
    phase = 6;
    i = 0;
    j = 0;
    speed = 0;
    
} else if(!deathFlag)
{
    barHP.image_xscale = view_wview[0] * (nowHP/maxHP);
} 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase = 0)
{
 phase = 1;
 i = 0;
 j = 0;
 f = false;
 image_angle = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
