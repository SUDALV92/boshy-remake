<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maskTrigger</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>triggered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{
     with(Spike)
     {
      if(active &amp;&amp; !stop)
      {
       if(shiftDirection == "up")
       {
        if(triggered)
        {
         if(y &lt; defaultY)
         {
          if(f)
          {
           image_xscale = 1;
           image_yscale = 1;
           f = false;
          }
          y += 4;
         }
         else
         {
          y = defaultY;
          if(!invertHide &amp;&amp; !dontHide)
          {
           image_xscale = 0;
           image_yscale = 0;
           f = true;
          }
          triggered = false;
          stop = true;      
         }
        }
        else
        {
         if (y &gt; defaultY-32)
         {
          if(f)
          {
           image_xscale = 1;
           image_yscale = 1;
           f = false;
          }
          y-=4;
         }
         else
         {
          y = defaultY-32;
          if(invertHide &amp;&amp; !dontHide)
          {
           image_xscale = 0;
           image_yscale = 0;
           f = true;
          }
          triggered = true;
          stop = true;      
         }
        }
       }
       else if(shiftDirection == "down")
       {
        if(triggered)
        {
         if(y &gt; defaultY)
         {
          if(f)
          {
           image_xscale = 1;
           image_yscale = 1;
           f = false;
          }
          y -= 4;
         }
         else
         {
          y = defaultY;
          if(invertHide &amp;&amp; !dontHide)
          {
           image_xscale = 0;
           image_yscale = 0;
           f = true;
          }
          triggered = false;
          stop = true;      
         }
        }
        else
        {
         if (y &lt; defaultY+32)
         {
          if(f)
          {
           image_xscale = 1;
           image_yscale = 1;
           f = false;
          }
          y+=4;          
         }
         else
         {
          y = defaultY+32;
          if(!invertHide &amp;&amp; !dontHide)
          {
           image_xscale = 0;
           image_yscale = 0;
           f = true;
          }
          triggered = true;
          stop = true;      
         }
        }
       }
      }
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{ 
 if(keyboard_check_pressed(global.jump))
 {
  triggered = true;
  Spike.stop = false;
 }
}
else triggered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
