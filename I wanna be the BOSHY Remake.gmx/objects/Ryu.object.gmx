<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRyuStopped</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>playerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.2;
image_xscale = -1;
phase = -1;
i = 0;
j = 0;
f = false;
rand = 20;
roomLeft = view_xview[1];
roomRight = view_xview[1] + view_wview[1];
maxHP = 300;
nowHP = maxHP;
barHP = instance_create(roomLeft, 0, KittyBar);
barHP.image_xscale = view_wview[1];
barHP.image_yscale = 8;
barHP.visible = false;
deathFlag = false;
place = 0;
temp = 0;
waveFactor = 0;
ID[10] = 0;
defX = x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{
 switch(phase)
 {
  case 0:
       if(i == 0)
       {
        vspeed = 1;
        block1 = instance_create(x - 20, y, DeDeDeBlock);
        block1.vspeed = vspeed;
        block1.solid = false;
        block1.ryuBlock = true;
        block2 = instance_create(x - 20, y + 16, DeDeDeBlock);
        block2.vspeed = vspeed;
        block2.solid = false;
        block2.ryuBlock = true;
        block3 = instance_create(x - 4, y, DeDeDeBlock);
        block3.vspeed = vspeed;
        block3.solid = false;
        block3.ryuBlock = true;
        block4 = instance_create(x - 4, y + 16, DeDeDeBlock);
        block4.vspeed = vspeed;
        block4.solid = false;
        block4.ryuBlock = true;
       }
       i++;
       if(y &gt; 431)
       {
        vspeed = 0;
        phase = 1;
        i = 0;
       }       
       break;
  case 1:
       if(i == 0)
       {
        sprite_index = sprRyuStand;
        image_xscale = 1;
        text = instance_create(x-50,y-sprite_height/2,Text);
        text.alg = 2;
        text.font = font9;
        text.color = c_white;
        text.txt = "So . . . We meet#again Akuma...";
       }
       if(i == 170)
       {
        sprite_index = sprRyuPain;
        Text.txt = "WHAT?! You're not#Akuma!";
       }
       if(i == 190)
       {
        sprite_index = sprRyuStand;
       }
       if(i == 270)
       {
        sprite_index = sprRyuHandAtack;
        Text.txt = "What are YOU doing#here!?";
       }
       if(i == 400)
       {
        sprite_index = sprRyuStand;
        Text.txt = "Nvm! I need to#practice my down#forward punch spam#technique anyway...";
       }
       
       i++;
       if(i == 600)
       {
        phase = 2;
        i = 0;
        with(Text)
        {
         instance_destroy();
        }
       }
       
       break;
  case 2:
       if(i == 0)
       {
        barHP.visible = true;
        sprite_index = sprRyuStand;
        x = defX;
        y = 431;
        hadouken = instance_create(x,y-sprite_height/2,RyuHadouken);
        hadouken.image_xscale = 7;
        hadouken.image_yscale = 7;
        hadouken.hspeed = -6;
        hadouken.image_angle = 180;
        audio_play_sound(sndHadouken,0,0);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 30;
       }
       i++;
       if(i == 60)
       {
        phase = 3;
        i = 0;
       }
       break;
  case 3:
       if(i == 0)
       {
        audio_play_sound(sndRyuTea,0,0);
        temp = x;
        place = 0;
        sprite_index = sprRyuJumping;
        image_xscale = -1;
       }
       if(x &lt; roomLeft + 50 &amp;&amp; y &gt; 250)
       {
        phase = 4;
        image_angle = 0;
        y = 431;
        sprite_index = sprRyuStopped;
        image_xscale = 1;
        i = 0;
        j = 0;
        break;
       }
       else
       {
        x = temp - 280 + lengthdir_x(260,place);
        y = 420 + lengthdir_y(260,place);
        place += 1;
        image_angle = point_direction(temp - 300,400,x,y);
        if(j mod 20 == 0)
        {
         hadouken = instance_create(x,y,RyuHadouken);
         hadouken.direction = point_direction(x,y,Player.x,Player.y)
         hadouken.image_angle = hadouken.direction;
         hadouken.speed = 3;
         audio_play_sound(sndHadouken,0,0);  
         shakeScreen = instance_create(x,y,ShakeScreen);
         shakeScreen.view = 1;
         shakeScreen.alarm[0] = 5;       
        }
        j++;
       }
       i++;
       break;
  case 4:
       if(i == 0)
       {
        audio_play_sound(sndHadouken,0,0);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        for(j = roomLeft; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
       }
       if(i == 30)
       {
        audio_play_sound(sndRyuTatsumaki,0,0);
        sprite_index = sprRyuLegAtack;
        image_xscale = 1;
        move_towards_point(roomRight - 100, 431, 10);
       }
       if(i == 80)
       {
        move_towards_point(roomRight, 500, 10);
       }
       if(i == 93)
       {
        move_towards_point(roomLeft + 280, 0, 10);
        audio_play_sound(sndRyuShinkutatsumaki,0,0);
       }
       i++;
       if(i == 160)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        audio_play_sound(sndHadouken,0,0);
        for(j = roomLeft; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
        phase = 5;
        i = 0;
        j = 0;
       }       
       break;
  case 5:
       if(i == 30)
       {
        x = roomRight + 100;
        y = 431;
        image_index = 0;
        hspeed = -10;
        vspeed = 0;
        audio_play_sound(sndRyuTatsumaki,0,0);
       }
       if(i == 100)
       {
        hspeed = 10;        
       }
       if(i == 120)
       {
        hspeed = 0;
        vspeed = -10;
       }
       if(i == 160)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        audio_play_sound(sndHadouken,0,0);
        for(j = roomLeft; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
       }
       if(i == 190)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        audio_play_sound(sndHadouken,0,0);
        for(j = roomLeft+32; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
       }
       if(i == 220)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        audio_play_sound(sndHadouken,0,0);
        for(j = roomLeft; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
       }
       if(i == 250)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 10;
        audio_play_sound(sndHadouken,0,0);
        for(j = roomLeft+32; j &lt; roomRight+32; j += 64)
        {
         hadouken = instance_create(j,0,RyuHadouken);
         hadouken.image_angle = 270;
         hadouken.direction = 270;
         hadouken.speed = 6;
        }
       }
       i++;
       if(i == 300)
       {
        phase = 6;
        i = 0;
        j = 0;
       }
       break;
  case 6:
       if(i == 0 || i == 120 || i == 240)
       {
        audio_play_sound(sndRyuShoryuken,0,0);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 3;
       }
       if(i == 30 || i == 150 || i == 270)
       {
        x = Player.x;
        y = 590;
        vspeed = 0;
        gravity = 0;
       }
       if(i == 50 || i == 170 || i == 290)
       {
        sprite_index = sprRyuShoruken;
        gravity = 0.4;
        vspeed = -14;        
        audio_play_sound(sndRyuTea,0,0);
       }
       if(i == 270)
        {
         shakeScreen = instance_create(x,y,ShakeScreen);
         shakeScreen.view = 1;
         shakeScreen.alarm[0] = 10;
         audio_play_sound(sndHadouken,0,0);
         for(j = roomLeft; j &lt; roomRight+32; j += 64)
         {
          hadouken = instance_create(j,0,RyuHadouken);
          hadouken.image_angle = 270;
          hadouken.direction = 270;
          hadouken.speed = 6;
         }
        }  
       i++;
       if(i == 360)
       {
        i = 0;
        phase = 7;
       }
       
       break;
  case 7:
       if(i == 0)
       {
        x = roomRight - 64;
        y = -100;
        gravity = 0;
        vspeed = 10;
        sprite_index = sprRyuStopped;
       }
       if(y &gt;= 431)
       {
        y = 431;
        vspeed = 0;
        
       }
       if(i == 50)
       {
        sprite_index = sprRyuHadooouking;
        image_speed = 0.4;
        image_xscale = 1;
        audio_play_sound(sndRyuShinku,0,0);
       }
       if(i == 101)
       {
        image_speed = 0;
        image_index = 22;
       }
       if(i == 99)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        audio_play_sound(sndRyuHadooouken,0,0);
        rand = 40;
        f = false;
        j = 0;
        temp = 0.6;
       }
    
       if(i &gt; 100 &amp;&amp; i &lt; 340)
       {
        rand+=waveFactor;
        if(!f)
        {
         if(waveFactor &lt; 6)
          waveFactor+=temp;
         else 
         {
          f = true;
          switch(j)
          {
           case 0: temp = 1.2; break;
           case 1: temp = 1.3; break;
           case 2: temp = 1.1; break;
           case 3: temp = 1.4; break;
           case 4: temp = 1.3; break;
           case 5: temp = 1.2; break;
           case 6: temp = 0.7; break;
           case 7: temp = 1.2; break;
           default: temp = 1.3; break;
          }
          j++;
         }
        }
        else
        {
         if(waveFactor &gt; -6)
          waveFactor -= temp;
         else 
         {
          temp = 1.0;
          f = false;
         }
        }
       }
       
       
       if(i &gt; 100 &amp;&amp; i &lt; 340)
       {
               
        hadouken1 = instance_create(x - 50, y - sprite_height/2 + 10, RyuHadouken);
        hadouken1.direction = 180;
        hadouken1.image_angle = 180;
        hadouken1.speed = 10;
        hadouken1.long = true;
        hadouken1.position = -rand;
        
        hadouken2 = instance_create(x - 50, y - sprite_height/2 + 30, RyuHadouken);
        hadouken2.direction = 180;
        hadouken2.image_angle = 180;
        hadouken2.speed = 10;
        hadouken2.long = true;
        hadouken2.position = rand;
       }
       i++;
       if(i == 340)
       {
        with(ShakeScreen)
        {
         instance_destroy();
        }
        phase = 8;
        i = 0;
        j = 0;
       }
       
       if(distance_to_object(Player) &lt; 30)
       {
        phase = 13;
        i = 0;        
       }
       
       break;
  case 8:
       if(i == 0)
       {
        sprite_index = sprRyuThrowing;
        image_speed = 0.2;
       }
       if(i == 35)
       {
        image_index = 7;
        image_speed = 0;
        audio_play_sound(sndRyuSeeya,0,0);
        car = instance_create(x,y - 100, RyuCar);
        car.vspeed = -10;
        car.hspeed = -2;
        car.dieLine = roomLeft - 200;
       }
       if(i == 100)
       {
        image_index = 0;
        image_speed = 0.2;
       }
       if(i == 135)
       {
        image_index = 7;
        image_speed = 0;
        audio_play_sound(sndRyuShakoref,0,0);
        car = instance_create(x,y - 100, RyuCar);
        car.vspeed = -10;
        car.hspeed = -2;
        car.dieLine = roomLeft - 200;
       }
       if(i == 180)
       {
        sprite_index = sprRyuLegAtack;
        image_speed = 0.2;
        vspeed = -6;
        audio_play_sound(sndRyuTatsumaki,0,0);
       }
       if(i == 280)
       {
        vspeed = 23;
       }
       if(i &gt; 280)
       {
        vspeed-=0.4;
       }
       if(i == 320)
       {
        sprite_index = sprRyuJumping;
       }
       i++;
       if(i == 500)
       {
        instance_create(roomLeft+320,240,RyuFight);
        phase = 9;
        i = 0;
       }
       break;
  case 9:
       if(i == 100)
       {
        instance_create(roomRight+70,270,RyuChunli);
        audio_play_sound(sndRyuChunliSpining,0,0);
       }
       if(i == 130)
       {
        audio_play_sound(sndRyuChunliKikoken,0,1);
       }
       if(i == 500)
       {
        audio_stop_sound(sndRyuChunliKikoken);
        audio_play_sound(sndRyuChunliYata,0,0);
        with(RyuChunli)
         instance_destroy();
        audio_play_sound(sndRyuBlanka,0,0);
        instance_create(roomRight-10,300,RyuBlanka);
       }
       i++;
       if(instance_exists(RyuBlanka) &amp;&amp; RyuBlanka.x &lt; roomLeft - 100)
       {
        with(RyuBlanka)
         instance_destroy();
        phase = 10;
        i = 0;
       }
       break;
  case 10:
       if(i == 0)
       {
        instance_create(roomRight,y, RyuDhalsim);
       }
       i++;
       if(RyuDhalsim.hp == 0)
       {
        phase = 11;
        i = 0;
        vspeed = 0;
       }
       break;
  case 11:
       i++;
       if(i == 100)
       {
        phase = 2;
        i = 0;
       }
       break;
  case 12:
       if(i == 0)
       {
        audio_play_sound(sndRyuDie,0,0);
        vimpulse = -2.5;
        sprite_index = sprRyuDie;
        hspeed = -2;
        vspeed = vimpulse;
        gravity = 0.1;
       }
       if(image_index == 3)
       {
        image_speed = 0;
       }
       if(place_meeting(x,y+2,DeDeDeBlock))
       {
        if(hspeed &lt; 0 &amp;&amp; vimpulse &lt; 0)
        {
         vimpulse += 0.1
         vspeed = vimpulse;
        }
        else
        {
         vspeed = 0;
         gravity = 0;
        }
       }
       
       if(hspeed &lt; 0)
       {
        hspeed +=0.005;
       }
       else
       {
        with(WarpBlocker)
        {
         instance_destroy();
        }
        instance_destroy();
       }
       i++;
       break;
  case 13:
       if(i == 0)
       {
        sprite_index = sprRyuLegAtack;
        audio_play_sound(sndRyuSeeya,0,0);
       }
       if(i == 5)
       {
        move_towards_point(x+40,y+40,10);
       }
       if(i == 10)
       {
        move_towards_point(x - 70, y - 70, 10);
       }
       i++;
       break;
 }
}
else
{
 if(audio_is_playing(sndRyuChunliKikoken))
  audio_stop_sound(sndRyuChunliKikoken);
 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase &gt; 1)
{
    audio_play_sound(sndBossHit,0,0);
    with(other)
    {
     instance_destroy();
    }
    nowHP -= 1;
    if (nowHP &lt;= 0 &amp;&amp; !deathFlag) 
    {   
        barHP.image_xscale = 0;
        audio_stop_all();
        deathFlag = true;
        phase = 12;
        i = 0;
        j = 0;
        speed = 0;
        
    } 
    else if(!deathFlag)
    {
        barHP.image_xscale = view_wview[0] * (nowHP/maxHP);
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase &lt; 2 &amp;&amp; phase != -1)
{
 phase = 2;
 i = 0; 
 y = 431;
 vspeed = 0;
 with(DeDeDeBlock)
 {
  if(ryuBlock)
   instance_destroy();
 }
 with(Text)
 {
  instance_destroy();
 }
 ex_audio_set_track_position("RyuTheme",21.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
