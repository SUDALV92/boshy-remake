<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maskTrigger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 120;
left = 2560;
right = 3200;
L0 = 3000;
L1 = 3016;
L2 = 3032;
L3 = 3048;
L4 = 3064;
L5 = 3080;
L6 = 3096;
L7 = 3112;
L8 = 3128;
L9 = 3144;
L10 = 3160;
L11 = 3176;
randomize();
rngLeft = 0;
rngRight = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(Player)
{
    jumpMode = 0;
    image_yscale = abs(image_yscale); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rngRight = floor(random(4));
switch(rngRight)
{
    case 0:
        var dot1 = instance_create(right,L2,GravitronDot);
        dot1.hspeed = -3;
        var dot2 = instance_create(right+8,L4, GravitronDot);
        dot2.hspeed = -3;
        var dot3 = instance_create(right+24,L8, GravitronDot);
        dot3.hspeed = -3;
        var dot4 = instance_create(right+32,L10, GravitronDot);
        dot4.hspeed = -3;
        break;
    case 1:
        dot = instance_create(right,L4,GravitronDot);
        dot.hspeed = -3;
        dot = instance_create(right+100,L6, GravitronDot);
        dot.hspeed = -3;
        dot = instance_create(right+200,L8, GravitronDot);
        dot.hspeed = -3;
        dot = instance_create(right+300,L10, GravitronDot);
        dot.hspeed = -3;
        break;
    case 2:
        dot = instance_create(right,L5,GravitronDot);
        dot.hspeed = -3;
        dot = instance_create(right,L7, GravitronDot);
        dot.hspeed = -3;
        break;
    case 3:
        dot = instance_create(right,L0,GravitronDot);
        dot.hspeed = -3;
        dot = instance_create(right,L11, GravitronDot);
        dot.hspeed = -3;
        break;
    default:
        dot1 = instance_create(right,L0,GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L1, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L2, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L3, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L4, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L5, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L6, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L7, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L8, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L9, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L10, GravitronDot);
        dot1.hspeed = -3;
        dot1 = instance_create(right,L11, GravitronDot);
        dot1.hspeed = -3;
        break;
}
if(instance_exists(Player))
    alarm[3] = room_speed*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rngLeft = floor(random(4));
switch(rngLeft)
{
    case 0:
        var dot1 = instance_create(left,L2,GravitronDot);
        dot1.hspeed = 3;
        var dot2 = instance_create(left-8,L4, GravitronDot);
        dot2.hspeed = 3;
        var dot3 = instance_create(left-24,L8, GravitronDot);
        dot3.hspeed = 3;
        var dot4 = instance_create(left-32,L10, GravitronDot);
        dot4.hspeed = 3;
        break;    
    case 1:
        dot = instance_create(left-300,L2,GravitronDot);
        dot.hspeed = 3;
        dot = instance_create(left-200,L4, GravitronDot);
        dot.hspeed = 3;
        dot = instance_create(left-100,L6, GravitronDot);
        dot.hspeed = 3;
        dot = instance_create(left,L8, GravitronDot);
        dot.hspeed = 3;
        break;
    case 2:
        dot = instance_create(left,L5,GravitronDot);
        dot.hspeed = 3;
        dot = instance_create(left,L7, GravitronDot);
        dot.hspeed = 3;
        break;    
    case 3:
        dot = instance_create(left,L0,GravitronDot);
        dot.hspeed = 3;
        dot = instance_create(left,L11, GravitronDot);
        dot.hspeed = 3;
        break;
}
if(instance_exists(Player))
    alarm[2] = room_speed*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{
    if(timer &gt; 0)
    {
        timer--;
        alarm[1] = room_speed;
    }
    else
    {
        with(VVVGravitronSideBottom)
        {
            instance_destroy();
            view_visible[0] = true;
            view_visible[2] = false;            
        }
        with(Black)
        {
            instance_destroy();
        }
        with(GravitronDot)
        {
            instance_destroy();
        }
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GravitronBlocker.solid = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_visible[0] = false;
view_visible[2] = true;
with(other)
{
    x+=50;
    jumpMode = 2;
}
alarm[0] = 10;
alarm[1] = room_speed;
alarm[2] = room_speed;
alarm[3] = room_speed*2;
Black.visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(false);
draw_set_font(font32);
draw_text(2850,3232,string(timer));
texture_set_interpolation(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
