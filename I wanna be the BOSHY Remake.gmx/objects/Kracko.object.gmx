<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKrackoCloud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>playerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 0;
i = 0;
j = 0;
f = false;
f2 = false;
topY = 150;
image_speed = 0.2;
instance_create(x,y,KrackoEye);
image_xscale = 2;
image_yscale = 2;
roomLeft = view_xview[1];
roomRight = view_xview[1] + view_wview[1];
maxHP = 21;
nowHP = maxHP;
barHP = instance_create(roomLeft, 0, KittyBar);
barHP.image_xscale = view_wview[0];
barHP.image_yscale = 8;
deathFlag = false;
hitsToInvisible = 5;
invisible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitsToInvisible = 5;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{
 switch(phase)
 {
  case 0:
       ex_audio_stop_all();
       ex_audio_play("KrackoTheme",1);
       y = -sprite_height;
       x = roomLeft + 320;
       phase = 1;       
       break;
  case 1:
       i++;
       if(y &lt; topY)
       {
        y+=3;
       }
       else
       {
        i = 0;
        phase = 2;
       }
       break;
  case 2:
       i++;
      if(!f &amp;&amp; y &lt;= topY)
               {
                if(vspeed &lt; 3)
                 vspeed += 0.3;
               }
               else f = true;
               
               if(f &amp;&amp; y &gt; topY - 30)
               {
                if(vspeed &gt; -3)
                 vspeed -= 0.3;
               }
               else f = false;
       
       if(i == 60)
       {
        lighting = instance_create(x,y+50,KrackoLighting);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
        shakeScreen.alarm[0] = 5;        
        if(instance_exists(Player))
        {
         lighting.image_angle = KrackoEye.image_angle + 90 + Player.hspeed*2.5;
        }
        phase = 3;
        i = 0;
       }
       break;
  case 3:
       switch(j)
       {
        case 0:
             if (point_distance(x, y, roomLeft+200, topY) &gt; 5)
             {
              move_towards_point(roomLeft+200,topY,5);        
             }
             else 
             {
              speed = 0;
              j = 1;
             }
             break;
        case 1:
             if (point_distance(x, y, roomLeft, topY+270) &gt; 5)
             {
              move_towards_point(roomLeft,topY+270,5);        
             }
             else 
             {
              speed = 0;
              j = 2;
             }
             break;
        case 2:
             if(point_distance(x, y, roomRight - 100, topY+270) &gt; 5)
             {
              move_towards_point(roomRight-100,topY+270,5);
              
              }
              else
              {
               speed = 0;
               j = 3;
              }
             break;
        case 3:
             if(point_distance(x, y, roomRight - 100, topY) &gt; 5)
             {
              move_towards_point(roomRight-100,topY,5);
             }
             else
             {
              speed = 0;    
              j = 4;  
             }
             break;
        case 4:
             phase = 4;
             i = 0;
             j = 0;
             break;
       }
       break;
  case 4:
       i++;
       if(!f &amp;&amp; y &lt;= topY)
               {
                if(vspeed &lt; 3)
                 vspeed += 0.3;
               }
               else f = true;
               
               if(f &amp;&amp; y &gt; topY - 30)
               {
                if(vspeed &gt; -3)
                 vspeed -= 0.3;
               }
               else f = false;
       if(i mod 15 == 0)
       {
        instance_create(x,y,KirbyBirdA);
        audio_play_sound(sndKirbyBirdThrow,0,0);
       }
       if(i == 100)
       {
        phase = 5;
        i = 0;
       }
       if(instance_exists(Player) &amp;&amp; Player.x &gt;= x-sprite_width/2 &amp;&amp; !instance_exists(KrackoShit))
       {
        instance_create(x,y,KrackoShit);
       }
       break;
  case 5:
      if(!f &amp;&amp; y &lt;= topY)
               {
                if(vspeed &lt; 3)
                 vspeed += 0.3;
               }
               else f = true;
               
               if(f &amp;&amp; y &gt; topY - 30)
               {
                if(vspeed &gt; -3)
                 vspeed -= 0.3;
               }
               else f = false;
       if(x &gt; roomLeft)
       {
        x-=4;
       }
       i++;
       if(i == 30)
       {
        instance_create(x,y+50,KrackoLighting);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.alarm[0] = 5;
        shakeScreen.view = 1;
       }
       if(i == 70)
       {
        instance_create(x,y+50,KrackoLighting);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.alarm[0] = 5;
        shakeScreen.view = 1;
       }
       if(i == 110)
       {
        instance_create(x,y+50,KrackoLighting);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.alarm[0] = 5;
        shakeScreen.view = 1;
       }
       if(i == 140)
       {
        instance_create(x,y+50,KrackoLighting);
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.alarm[0] = 5;
        shakeScreen.view = 1;
        i = 0;
        phase = 6;
       }
       break;
  case 6:
       i++;
       if(!f &amp;&amp; y &lt;= topY)
               {
                if(vspeed &lt; 3)
                 vspeed += 0.3;
               }
               else f = true;
               
               if(f &amp;&amp; y &gt; topY - 30)
               {
                if(vspeed &gt; -3)
                 vspeed -= 0.3;
               }
               else f = false;
       if(x &lt; roomRight - sprite_width/2 &amp;&amp; !f2)
       {
        hspeed = 7;
       }
       else f2 = true;
       if(x &gt; roomLeft &amp;&amp; f2)
       {
        hspeed = -7;
       }
       else f2 = false;
       
       if(i mod 5 == 0)
       {
        instance_create(random_range(roomLeft,roomRight),0,KrackoStar);
       }
       if(i == 200)
       {
        phase = 7;
        i = 0;
        f2 = false;
       }
       break;
  case 7:
       i++;
       if(!f &amp;&amp; y &lt;= topY)
       {
        if(vspeed &lt; 3)
         vspeed += 0.2;
       }
       else f = true;
               
       if(f &amp;&amp; y &gt; topY - 20)
       {
        if(vspeed &gt; -3)
         vspeed -= 0.2;
       }
       else f = false;
       
       if (!f2 &amp;&amp; point_distance(x, y, roomLeft+320, topY) &gt; 5)
       {
        move_towards_point(roomLeft+320,topY,5);        
       }
       else 
       {
        hspeed = 0;
        f2 = true; 
       }
       if(i == 1)
       {
        audio_play_sound(sndKirbyVortex,0,1);
        for(k = -10;k &lt; 10;k++)
        {
         if(k &lt; 0) 
         {
          vortex = instance_create(roomLeft+320, topY, KrackoVortex);
          vortex.length = k * 50 - 40;
         } 
         else 
         {
          vortex = instance_create(roomLeft+320, topY, KrackoVortex);
          vortex.length = k * 50 + 60;
         }
        }
       }
              
       if(i == 500)
       {
        with(KrackoVortex)
        {
         instance_destroy();
        }
        audio_stop_sound(sndKirbyVortex);
        phase = 2;
        f2 = false;
        i = 0;
       }
       break;
  case 8: //death phase
       if(i == 0)
       {
        shakeScreen = instance_create(x,y,ShakeScreen);
        shakeScreen.view = 1;
       }
       if(i mod 10 == 0)
       {
        instance_create(x + random_range(-sprite_width/2,sprite_width/2),y + random_range(-sprite_height/2,sprite_height/2),KittyExplosion);
        
       }
       x+=0.5;
       y+=0.5;
       
       if(i == 200)
       {
        visible = false;
       }
       if(i == 250)
       {
        view_visible[0] = true;
        view_visible[1] = false;
        KrackoBlock1.y = -122;
        KrackoBlock2.y = -122;
        World.backgroundScript = "BackgroundFollow";
        World.music = "bgKirby2";
        ex_audio_stop_all();
        ex_audio_play("bgKirby2",1);
        with(KrackoEye)
        {
         instance_destroy();
        }
        with(ShakeScreen)
        {
            instance_destroy();
        }
        instance_destroy();
       }
       i++;       
       break;
 }
  
}
else
{
 speed = 0;
 with(KrackoVortex)
 {
  instance_destroy();
 }
 audio_stop_sound(sndKirbyVortex);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(hitsToInvisible &gt; 0 &amp;&amp; !invisible)
{
 if(phase &gt; 1)
 {
  audio_play_sound(sndBossHit,0,0);
  with(other)
  {
   instance_destroy();
  }
  nowHP -= 1;
  hitsToInvisible--;
  if(hitsToInvisible == 0)
   invisible = true;
}

if(invisible)
{
 image_alpha = 0.2;
 alarm[0] = 50;
 invisible = false;
}
 
if (nowHP &lt;= 0 &amp;&amp; !deathFlag) 
{   
    barHP.image_xscale = 0;
    audio_stop_all();
    deathFlag = true;
    phase = 8;
    i = 0;
    j = 0;
    speed = 0;
    
} else if(!deathFlag)
{
    barHP.image_xscale = view_wview[0] * (nowHP/maxHP);
} 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
