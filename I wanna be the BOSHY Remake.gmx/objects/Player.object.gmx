<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7777</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.left = vk_left;
global.right = vk_right;
global.jump = vk_lshift;
global.shoot = ord("Z");
frozen = false; 
jump = 8.5; 
jump2 = 7; 
djump = true; 
maxSpeed = 3; 
gravity = 0.4; 
maxFallSpeed = 8; 
maxVspeed = 9; 
maxVspeed2 = 9
image_speed = 0.2; 
onPlatform = 0
writeRoomCaption()
//if (room != rSelectStage)
alarm[0] = room_speed
godmode = false;
jumpMode = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frozen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.time += 1
writeRoomCaption()
alarm[0] = room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x&gt;room_width x=1;
if x&lt;0 x=room_width-1;
if y&gt;room_height y=1;
if y&lt;0 y=room_height-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var L,R,h;


L = keyboard_check_direct(global.left);
R = keyboard_check_direct(global.right);


h = R;
if (h == 0) 
{
    h = -L;
}


if (frozen == true) 
{
    h = 0;
}


if (h != 0) 
{

    hspeed = maxSpeed*h;
    
    image_xscale = h;
    
    sprite_index = sprPlayerRunning;
    image_speed = 0.3;
} else 
{

    hspeed = 0;
    
    sprite_index = sprPlayerIdle;
    image_speed = 0.1;
}


if (onPlatform == false) 
{

    if (vspeed &lt; -0.05) 
    {
        sprite_index = sprPlayerJump;
    }
    if (vspeed &gt; 0.05) 
    {
        sprite_index = sprPlayerFall;
    }
}


else 
{
    if (gravity_direction == 270 &amp;&amp; place_meeting(x,y+4,Platform) == false) 
    {
     onPlatform = 0;
    }
    else if (gravity_direction == 90 &amp;&amp; place_meeting(x,y-4,Platform) == false)
    {
     onPlatform = 0;
    }
}

if(gravity_direction == 270 &amp;&amp; vspeed &gt; maxVspeed)
 vspeed = sign(vspeed)*maxVspeed;
if(gravity_direction == 90 &amp;&amp; abs(vspeed) &gt; abs(maxVspeed))
 vspeed = sign(vspeed)*maxVspeed;


switch(jumpMode)
{
 case 0: maxVspeed = 9; break;
 case 1: maxVspeed = 7; break;
 case 2: maxVspeed = 6; break;
}

if (frozen == false) 
{

    if (keyboard_check_pressed(global.shoot)) {
        playerShoot();
    }
    switch(jumpMode)
    {
     case 0:
      if (keyboard_check_pressed(global.jump)) 
      {
       playerJump();
      }
    
      if (keyboard_check_released(global.jump)) 
      {
       playerVJump();
      }
      break;
     case 1:
      if(keyboard_check_pressed(global.jump))
       playerGravityChange();
      break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y-vspeed/2 &lt;= other.y) {
    if (other.vspeed &gt;= 0) {
        y = other.y-9;
        vspeed = other.vspeed;
        djump = true;
    }
    onPlatform = true;
    djump = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="playerKiller">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!godmode)
 KillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="addJump">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>djump = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_free(x+hspeed,y) == false) {
    if (hspeed &lt;= 0) {   
        move_contact_solid(180,abs(hspeed));
    }
    if (hspeed &gt; 0) {    
        move_contact_solid(0,abs(hspeed));
    }
    hspeed = 0;
}

if (place_free(x,y+vspeed) == false) {
    if (vspeed &lt;= 0) {    
        move_contact_solid(90,abs(vspeed));
    }
    if (vspeed &gt; 0) {    
        move_contact_solid(270,abs(vspeed));
        djump = true;
    }
    vspeed = 0;
}

if (place_free(x+hspeed,y+vspeed) == false) {
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bbox_right&gt;room_width
{
   var oldx=x;
   draw_self();
   x=x-room_width
   draw_self();
   x=oldx
} else if bbox_left&lt;0
{
   var oldx=x;
   draw_self();
   x=room_width+x
   draw_self();
   x=oldx
} else if bbox_top &lt; 0
{
    var oldy = y;
    draw_self();
    y = room_height+y;
    draw_self();
    y=oldy;
} else if bbox_bottom &gt; room_height
{
    var oldy = y;
    draw_self();
    y = y - room_height;
    draw_self();
    y = oldy;
} else draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>godmode = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
