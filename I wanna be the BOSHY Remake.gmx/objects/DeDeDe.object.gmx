<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDeDeDeReady</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>NoSmoothing</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 0;
i = 0;
f = false;
count = 2;
pause = false;
actions[10] = 4;
ready = true;
keynumber = 0;
wrong = false;
damageable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Player))
{
 switch(phase)
 {
  case 0:
       if(i == 0)
       {
        instance_create(x-160,y - 20,DeDeDeSay);
        DeDeDeSay.text = "Ready!";
       }
       i++;   
       if(i == 100)
       {
        i = 0;
        phase = 1;
       }
           
       break;
  case 1:
       if(i == 0)
        {
         for(j = 0;j&lt;count;j++)
         {
          actions[j] = round(random(3));
         }
         if(!f)
         {
          count++;
          f = !f;
         } 
         else 
          f = !f;
        }
       
       if(!pause)
       {
        DeDeDeSay.x = x - 160;
        DeDeDeSay.y = y - 20;
        DeDeDeSay.visible = true;
        switch(actions[i])
        {
         case 0:
              DeDeDeSay.text = "Left";
              sprite_index = sprDeDeDeLeftRight;
              image_speed = 0.2;
              image_xscale = -1;
              image_yscale = 1;
              audio_play_sound(sndDeDeDeLeftRight,0,0);
              break;
         case 1:
              DeDeDeSay.text = "Right";
              sprite_index = sprDeDeDeLeftRight;
              image_speed = 0.2;
              image_yscale = 1;
              image_xscale = 1;
              audio_play_sound(sndDeDeDeLeftRight,0,0);
              break;
         case 2:
              DeDeDeSay.text = "Jump";
              sprite_index = sprDeDeDeReady;
              image_speed = 0.2;
              image_yscale = -1;
              audio_play_sound(sndDeDeDeJump,0,0);
              break;
         case 3:
              DeDeDeSay.text = "Shoot";
              sprite_index = sprDeDeDeAtack;
              image_speed = 0.2;
              image_yscale = 1;
              audio_play_sound(sndDeDeDeJump,0,0);
              break;
        }
        alarm[0] = 50;
        pause = true;
        i++;
        if(i &gt; count)
        {
         phase = 2;
         i = 0;
        }
       }
       break;
  case 2:
       if(i == 0)
       {
        sprite_index = sprDeDeDeReady;
        DeDeDeSay.visible = false;
        ready = false;
        i++;
        audio_play_sound(sndDeDeDeReady,0,0);
       }
       if(ready)
       {
        audio_play_sound(sndDeDeDeOkay,0,0);
        LightDeDeDe.visible = true;
        LightDeDeDe.x = x;
        LightPlayer.visible = false;
        sprite_index = sprDeDeDeRight;
        image_xscale = 1;
        image_yscale = 1;
        DeDeDeSay.text = "Right?!"
        DeDeDeSay.visible = true;
        phase = 3;
        i = 0;
       }
       else
       {
        LightDeDeDe.visible = false;
        LightPlayer.visible = true;       
       }
       if(wrong &amp;&amp; !instance_exists(KittyLazer))
       {
        audio_stop_sound(sndDeDeDeOkay);
        sprite_index = sprDeDeDeRight;
        image_xscale = 1;
        image_yscale = 1;
        lazer = instance_create(x,y,KittyLazer);
        lazer.image_yscale = 3;
        lazer.prepareTime = 1;
        i = 0;
       }
       break;
  case 3:
       if(i == 0)
       {
        damageable = true;
       }
       i++;
       if(i == 300)
       {
        damageable = false;
        phase = 1;
        i = 0;
       }
       
       break;
  case 4:
       with(DeDeDeSay) 
        instance_destroy();
       damageable = false;
       sprite_index = sprDeDeDeRight;
       image_angle = 340;
       if(place_meeting(x,y+2,Spike))
       {
        vspeed = 0;
        gravity = 0;
        phase = 5;
       }
       break;
  case 5:
       gravity = 0;
       if(i &lt; 10)
       {
        x+=3;
       }
       else if ( i &lt; 20)
       {
        x-=3;
       }
       if(i == 20)
       {
        i = 0;
       }
       i++;
       j++;
       if(j == 90)
       {
        phase = 6;
        i = 0;
        j = 0;
       }
       break;
  case 6:
       if(i == 0)
       {
        image_angle = 0;
        sprite_index = sprDeDeDeLeftRight;
        image_xscale = -7;
        image_yscale = 7;
        image_speed = 0.2;
        audio_play_sound(sndDeDeDeGrowing,0,0);
        y -= 40;
        with(Spike)
        {
         instance_destroy();
        }
        
       }
       if(i == 30)
       {
        vspeed = -16;
        hspeed = -2;
        gravity = 0.4;
       }
       
       if(i &gt; 70 &amp;&amp; place_meeting(x,y+2,DeDeDeBlock))
       {
        hspeed = 0;
        vspeed = 0;
        gravity = 0;
        sprite_index = sprDeDeDeRight;
        image_xscale = 7;
        phase = 7;
        i = 0;
        j = 0;
        f = false;
        animationEnd = false;
       }
       i++;
       break;
  case 7:
       sprite_index = sprDeDeDeSplitting;
       image_speed = 0.1;
       if(!instance_exists(DeDeDeKirby))
       {
        kirby = instance_create(x+20,y+20,DeDeDeKirby);
        kirby.image_xscale = 2;
        kirby.image_yscale = 2;
        kirby.direction = 120;
        kirby.speed = 1;
       }
       
       if(image_index == 7)
       {
        image_speed = 0;
        animationEnd = true;
       }
       if(i &gt; 30 &amp;&amp; !f)
       {
        if(j &gt; 4)
        {
         visible = false;
         f = !f;
         j = 0;
        }        
        j++;
       }
       else if(i &gt; 30 &amp;&amp; f)
       {
        if(j &gt; 4)
        {
         visible = true;
         f = !f;
         j = 0;
        }
        j++;
       }
       if(i == 160)
       {
        hadouken = instance_create(view_wview[0],50,DeDeDeHadouken);
        hadouken.hspeed = -6;
        hadouken.image_angle = 180;
        instance_destroy();
       }
       i++;
       break;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(damageable)
{
 x+=1;
 audio_play_sound(sndBossHit,0,0);
 with(other)
 {
  instance_destroy();
 }
 if(place_free(x,y+20))
 {
  phase = 4; 
  gravity = 0.2;
  audio_stop_all();
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!ready)
{ 
 switch(actions[keynumber])
 {
  case 0:
       audio_play_sound(sndDeDeDePlayerInput,0,0); 
       if(keyboard_check_released(global.left))
        keynumber++;
       else wrong = true;
       break;
  case 1:
       audio_play_sound(sndDeDeDePlayerInput,0,0); 
       if(keyboard_check_released(global.right))
        keynumber++;
       else wrong = true;
       break;
  case 2:
       audio_play_sound(sndDeDeDePlayerInput,0,0);  
       if(keyboard_check_released(global.jump))
        keynumber++;
       else wrong = true;
       break;
  case 3:
       audio_play_sound(sndDeDeDePlayerInput,0,0);  
       if(keyboard_check_released(global.shoot))
        keynumber++;
       else wrong = true;
       break;
 }
 if(keynumber == count)
 {
  keynumber = 0;
  ready = true;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
